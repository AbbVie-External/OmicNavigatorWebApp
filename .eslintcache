[{"C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\index.js":"1","C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Shared\\UrlControl.jsx":"2","C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Differential\\Differential.jsx":"3","C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Enrichment\\Enrichment.jsx":"4","C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Transitions\\TransitionActive.jsx":"5","C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Transitions\\TransitionStill.jsx":"6","C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Differential\\DifferentialVolcano.jsx":"7","C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Shared\\helpers.jsx":"8","C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Shared\\ButtonActions.jsx":"9","C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Differential\\DifferentialSearchCriteria.jsx":"10","C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Shared\\Templates.jsx":"11","C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Enrichment\\SplitPanesContainer.jsx":"12","C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\services\\omicNavigator.service.js":"13","C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Differential\\DifferentialVolcanoPlot.jsx":"14","C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Tabs.jsx":"15","C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Enrichment\\EnrichmentResultsGraph.jsx":"16","C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Enrichment\\ViolinPlot.jsx":"17","C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Transitions\\SearchingAlt.jsx":"18","C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Shared\\SVGPlot.jsx":"19","C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Enrichment\\FilteredDifferentialTable.jsx":"20","C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Transitions\\LoaderActivePlots.jsx":"21","C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Shared\\NumericExponentialInput.jsx":"22","C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Enrichment\\NetworkGraph.jsx":"23","C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Enrichment\\EnrichmentMultisetFilters.jsx":"24","C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Differential\\DifferentialPlot.jsx":"25","C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Differential\\MetafeaturesTable.jsx":"26","C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Differential\\DifferentialBreadcrumbs.jsx":"27","C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Enrichment\\EnrichmentSearchCriteria.jsx":"28","C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Enrichment\\EnrichmentBreadcrumbs.jsx":"29","C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\services\\pdf.service.js":"30"},{"size":526,"mtime":1609791892021,"results":"31","hashOfConfig":"32"},{"size":9471,"mtime":1609791891789,"results":"33","hashOfConfig":"32"},{"size":29935,"mtime":1610040255311,"results":"34","hashOfConfig":"32"},{"size":70321,"mtime":1610040293488,"results":"35","hashOfConfig":"32"},{"size":956,"mtime":1609791891883,"results":"36","hashOfConfig":"32"},{"size":1065,"mtime":1609791891943,"results":"37","hashOfConfig":"32"},{"size":34955,"mtime":1610040457312,"results":"38","hashOfConfig":"32"},{"size":9343,"mtime":1609791891808,"results":"39","hashOfConfig":"32"},{"size":8317,"mtime":1609791891710,"results":"40","hashOfConfig":"32"},{"size":37696,"mtime":1610044359565,"results":"41","hashOfConfig":"32"},{"size":265,"mtime":1609791891783,"results":"42","hashOfConfig":"32"},{"size":8836,"mtime":1609791891651,"results":"43","hashOfConfig":"32"},{"size":14919,"mtime":1610051962854,"results":"44","hashOfConfig":"32"},{"size":23091,"mtime":1609791891403,"results":"45","hashOfConfig":"32"},{"size":9949,"mtime":1609791891814,"results":"46","hashOfConfig":"32"},{"size":35312,"mtime":1609791891559,"results":"47","hashOfConfig":"32"},{"size":62304,"mtime":1609791891663,"results":"48","hashOfConfig":"32"},{"size":430,"mtime":1609791891869,"results":"49","hashOfConfig":"32"},{"size":5072,"mtime":1609791891766,"results":"50","hashOfConfig":"32"},{"size":17171,"mtime":1609791891576,"results":"51","hashOfConfig":"32"},{"size":714,"mtime":1609791891829,"results":"52","hashOfConfig":"32"},{"size":3897,"mtime":1609791891757,"results":"53","hashOfConfig":"32"},{"size":45132,"mtime":1609791891607,"results":"54","hashOfConfig":"32"},{"size":32030,"mtime":1609805285700,"results":"55","hashOfConfig":"32"},{"size":5159,"mtime":1609791891355,"results":"56","hashOfConfig":"32"},{"size":5158,"mtime":1609791891474,"results":"57","hashOfConfig":"32"},{"size":2355,"mtime":1609791891344,"results":"58","hashOfConfig":"32"},{"size":43605,"mtime":1610053280778,"results":"59","hashOfConfig":"32"},{"size":3918,"mtime":1609791891542,"results":"60","hashOfConfig":"32"},{"size":1082,"mtime":1609791892303,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1asxuey",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"64"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\index.js",[],["127","128"],"C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Shared\\UrlControl.jsx",[],"C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Differential\\Differential.jsx",[],"C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Enrichment\\Enrichment.jsx",[],"C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Transitions\\TransitionActive.jsx",[],"C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Transitions\\TransitionStill.jsx",[],"C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Differential\\DifferentialVolcano.jsx",[],"C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Shared\\helpers.jsx",["129"],"import React from 'react';\r\nimport { Popup } from 'semantic-ui-react';\r\nimport _ from 'lodash';\r\n// import phosphosite_icon from '../../resources/phosphosite.ico';\r\n// import reactome_icon from '../../resources/reactome.jpg';\r\n// import go_icon from '../../resources/go.png';\r\n// import msig_icon from '../../resources/msig.ico';\r\nimport * as d3 from 'd3-array';\r\n// import { omicNavigatorService } from '../../services/omicNavigator.service';\r\n\r\nexport function getLinkout(\r\n  // icons,\r\n  // iconDomains,\r\n  // TableValuePopupStyle,\r\n  // linkoutsConcatenated,\r\n  itemValue,\r\n  linkouts,\r\n  TableValuePopupStyle,\r\n) {\r\n  // itemValue = 'ENSP00000489236.1;ENSP00000484789.1;ENSP00000481486.1;ENSP00000480960.1;ENSP00000479794.1;ENSP00000479461.1';\r\n  function openWindows(link, itemValue) {\r\n    const windowFeatures =\r\n      'menubar=yes,location=yes,resizable=yes,scrollbars=yes,status=yes';\r\n    const itemValuesSeparated = separateItemValues(itemValue);\r\n    let linkoutsConcatenated = [];\r\n    if (itemValuesSeparated.length === 1) {\r\n      linkoutsConcatenated = `${link}${itemValuesSeparated[0]}`;\r\n      window.open(linkoutsConcatenated, '_blank', windowFeatures);\r\n    }\r\n    if (itemValuesSeparated.length > 1) {\r\n      for (const item of itemValuesSeparated) {\r\n        linkoutsConcatenated.push(`${link}${item}`);\r\n      }\r\n      linkoutsConcatenated.forEach(link => {\r\n        window.open(link, '_blank', windowFeatures);\r\n      });\r\n    }\r\n  }\r\n\r\n  const iconBaseUrl = 'https://icons.duckduckgo.com/ip3/';\r\n  let iconDomains = [];\r\n  let icons = [];\r\n\r\n  if (linkouts.length > 1) {\r\n    for (const val of linkouts) {\r\n      const domainRaw = findDomain(`${val}`);\r\n      const domainRawWww = domainRaw.includes('www')\r\n        ? domainRaw\r\n        : `www.${domainRaw}`;\r\n      const domainRawWwwHttps = domainRawWww.includes('//')\r\n        ? domainRawWww.split('//').pop()\r\n        : domainRawWww;\r\n      iconDomains.push(domainRawWwwHttps);\r\n      icons.push(`${iconBaseUrl}${domainRawWwwHttps}.ico`);\r\n    }\r\n\r\n    const Popups = linkouts.map((link, index) => {\r\n      return (\r\n        <Popup\r\n          key={itemValue - index}\r\n          trigger={\r\n            <img\r\n              src={icons[index]}\r\n              alt={iconDomains[index]}\r\n              className=\"ExternalSiteIcon\"\r\n              onClick={() => openWindows(link, itemValue)}\r\n            />\r\n          }\r\n          style={TableValuePopupStyle}\r\n          className=\"TablePopupValue\"\r\n          content={iconDomains[index]}\r\n          inverted\r\n          basic\r\n        />\r\n      );\r\n    });\r\n    return Popups;\r\n  } else {\r\n    const linkoutsIsArray = Array.isArray(linkouts);\r\n    const domainRaw = linkoutsIsArray\r\n      ? findDomain(`${linkouts[0]}`)\r\n      : findDomain(linkouts);\r\n    const domainRawWww = domainRaw.includes('www')\r\n      ? domainRaw\r\n      : `www.${domainRaw}`;\r\n    const domainRawWwwHttps = domainRawWww.includes('//')\r\n      ? domainRawWww.split('//').pop()\r\n      : domainRawWww;\r\n    iconDomains.push(domainRawWwwHttps);\r\n    icons.push(`${iconBaseUrl}${domainRawWwwHttps}.ico`);\r\n    return (\r\n      <Popup\r\n        key={itemValue}\r\n        trigger={\r\n          <img\r\n            src={icons[0]}\r\n            alt={iconDomains}\r\n            className=\"ExternalSiteIcon\"\r\n            onClick={() => openWindows(linkouts, itemValue)}\r\n          />\r\n        }\r\n        style={TableValuePopupStyle}\r\n        className=\"TablePopupValue\"\r\n        content={iconDomains}\r\n        inverted\r\n        basic\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport function separateItemValues(value) {\r\n  if (value) {\r\n    const splitValuesArr = value.split(';');\r\n    // const arrayOfValues =\r\n    return splitValuesArr;\r\n  }\r\n}\r\n\r\nexport function formatNumberForDisplay(num) {\r\n  if (!isNaN(num)) {\r\n    const number = Math.abs(num);\r\n    if (number === 0) {\r\n      return num;\r\n    } else if (number < 0.001 || number >= 1000) {\r\n      return num.toExponential(2);\r\n      // * If a number is < .001 report this value scientific notation with three significant digits\r\n      // * If a number is >= 1000, switch to scientific notation with three sig digits.\r\n\r\n      // } else if (number < 1 && number >= 0.001) {\r\n      //   return num.toPrecision(3);\r\n      // * If a number is < 1 & >= .001, report this value with three decimal places\r\n      // PN - what's left is >=1 and <1000, guess that goes to 3 digits too\r\n    } else {\r\n      return num.toPrecision(3);\r\n    }\r\n  } else return null;\r\n}\r\n\r\nexport function splitValue(value) {\r\n  if (value) {\r\n    const firstValue = value.split(';')[0];\r\n    const numberOfSemicolons = (value.match(/;/g) || []).length;\r\n    return numberOfSemicolons > 0\r\n      ? `${firstValue}...(${numberOfSemicolons})`\r\n      : firstValue;\r\n  }\r\n}\r\n\r\nexport function findDomain(link) {\r\n  if (link) {\r\n    const path = link.split('//')[1] || null;\r\n    return path != null ? path.split('/')[0] : null;\r\n  }\r\n}\r\n\r\nexport function limitValues(values, size) {\r\n  if (values) {\r\n    let commaSeparatedValues = values.join(', ');\r\n    if (values.length <= size) {\r\n      return commaSeparatedValues;\r\n    } else {\r\n      const numberOfCommas = (commaSeparatedValues.match(/,/g) || []).length;\r\n      const splitValues = commaSeparatedValues.split(',');\r\n      const slicedValues = splitValues.slice(0, size);\r\n      return `${slicedValues}...(${numberOfCommas + 1 - size} more)`;\r\n    }\r\n  }\r\n}\r\n\r\nexport function limitString(string, indexes, characters) {\r\n  if (indexes < 3) {\r\n    return string;\r\n  } else {\r\n    let stringSubstring = string?.substring(0, characters);\r\n    return `${stringSubstring}...`;\r\n  }\r\n}\r\n\r\nexport function scrollElement(_this, grid, target) {\r\n  const bodyRef =\r\n    _this[grid].current?.qhGridRef?.current?.bodyRef?.current || null;\r\n  window.requestAnimationFrame(function() {\r\n    if (bodyRef != null) {\r\n      const row = bodyRef.getElementsByClassName(target);\r\n      if (row.length !== 0) {\r\n        bodyRef.scrollTo({\r\n          top: row[0].offsetTop - 40,\r\n          left: 0,\r\n          behavior: 'smooth',\r\n        });\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nexport function networkByCluster(network) {\r\n  network = _.cloneDeep(network);\r\n  let buckets = [];\r\n  let inBucket = false;\r\n  const bucket = () => {\r\n    let keepGoing = true;\r\n    let nodeArray = [];\r\n    let nowInBucket = false;\r\n\r\n    while (keepGoing) {\r\n      keepGoing = false;\r\n      _.forEach(network.links, link => {\r\n        nowInBucket = false;\r\n        _.forEach(buckets, bucket => {\r\n          if (\r\n            _.includes(bucket, link.source) ||\r\n            _.includes(bucket, link.target)\r\n          ) {\r\n            nowInBucket = true;\r\n          }\r\n        });\r\n        if (!nowInBucket) {\r\n          if (\r\n            !_.includes(nodeArray, link.source) &&\r\n            !_.includes(nodeArray, link.target) &&\r\n            nodeArray.length === 0\r\n          ) {\r\n            nodeArray.push(link.source);\r\n            nodeArray.push(link.target);\r\n            keepGoing = true;\r\n          }\r\n          if (\r\n            _.includes(nodeArray, link.source) &&\r\n            !_.includes(nodeArray, link.target)\r\n          ) {\r\n            nodeArray.push(link.target);\r\n            keepGoing = true;\r\n          }\r\n          if (\r\n            _.includes(nodeArray, link.target) &&\r\n            !_.includes(nodeArray, link.source)\r\n          ) {\r\n            nodeArray.push(link.source);\r\n            keepGoing = true;\r\n          }\r\n        }\r\n      });\r\n    }\r\n    return nodeArray;\r\n  };\r\n  _.forEach(network.links, link => {\r\n    inBucket = false;\r\n    _.forEach(buckets, bucket => {\r\n      if (_.includes(bucket, link.source) || _.includes(bucket, link.target)) {\r\n        inBucket = true;\r\n      }\r\n    });\r\n    //found a link that isn't accounted for, so run through the bucketing process\r\n    if (!inBucket) {\r\n      buckets.push(bucket());\r\n    }\r\n  });\r\n  let nextIndex = 1;\r\n  _.forEach(network.nodes, node => {\r\n    let found = false;\r\n    _.forEach(buckets, (bucket, i) => {\r\n      if (_.includes(bucket, node.id)) {\r\n        node.group = i;\r\n        found = true;\r\n      }\r\n    });\r\n    if (!found) {\r\n      node.group = buckets.length + nextIndex;\r\n      nextIndex++;\r\n    }\r\n  });\r\n  _.forEach(network.links, link => {\r\n    _.forEach(buckets, (bucket, i) => {\r\n      if (_.includes(bucket, link.target || _.includes(bucket, link.source))) {\r\n        link.group = i;\r\n      }\r\n    });\r\n  });\r\n  network.nodes = _.sortBy(network.nodes, [\r\n    function(o) {\r\n      return o.group;\r\n    },\r\n  ]);\r\n  network.links = _.sortBy(network.links, [\r\n    function(o) {\r\n      return o.group;\r\n    },\r\n  ]);\r\n  let nodes = d3.group(network.nodes, d => d.group);\r\n  let links = d3.group(network.links, d => d.group);\r\n  let nodeArray = Array.from(nodes, function(o) {\r\n    return { name: 'cluster' + o[0], size: o[1].length, nodes: o[1] };\r\n  });\r\n  let linkArray = Array.from(links, function(o) {\r\n    return { name: 'cluster' + o[0], size_links: o[1].length, links: o[1] };\r\n  });\r\n  _.forEach(nodeArray, nObj => {\r\n    let links = _.find(linkArray, function(lObj) {\r\n      return lObj.name === nObj.name;\r\n    });\r\n    if (links) {\r\n      nObj.links = links.links;\r\n    } else {\r\n      nObj.links = [];\r\n    }\r\n  });\r\n  nodeArray.sort((x, y) => d3.descending(x.size, y.size));\r\n  return { name: 'Network', children: nodeArray };\r\n}\r\n","C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Shared\\ButtonActions.jsx",[],"C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Differential\\DifferentialSearchCriteria.jsx",[],"C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Shared\\Templates.jsx",[],"C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Enrichment\\SplitPanesContainer.jsx",[],"C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\services\\omicNavigator.service.js",[],"C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Differential\\DifferentialVolcanoPlot.jsx",[],["130","131"],"C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Tabs.jsx",[],["132","133"],"C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Enrichment\\EnrichmentResultsGraph.jsx",[],"C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Enrichment\\ViolinPlot.jsx",[],["134","135"],"C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Transitions\\SearchingAlt.jsx",[],"C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Shared\\SVGPlot.jsx",[],"C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Enrichment\\FilteredDifferentialTable.jsx",[],"C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Transitions\\LoaderActivePlots.jsx",[],"C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Shared\\NumericExponentialInput.jsx",[],"C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Enrichment\\NetworkGraph.jsx",[],"C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Enrichment\\EnrichmentMultisetFilters.jsx",[],"C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Differential\\DifferentialPlot.jsx",[],"C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Differential\\MetafeaturesTable.jsx",[],"C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Differential\\DifferentialBreadcrumbs.jsx",[],"C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Enrichment\\EnrichmentSearchCriteria.jsx",[],"C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Enrichment\\EnrichmentBreadcrumbs.jsx",[],"C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\services\\pdf.service.js",[],{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","severity":1,"message":"141","line":208,"column":32,"nodeType":"142","messageId":"143","endLine":243,"endColumn":8},{"ruleId":"136","replacedBy":"144"},{"ruleId":"138","replacedBy":"145"},{"ruleId":"136","replacedBy":"146"},{"ruleId":"138","replacedBy":"147"},{"ruleId":"136","replacedBy":"148"},{"ruleId":"138","replacedBy":"149"},"no-native-reassign",["150"],"no-negated-in-lhs",["151"],"no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'nowInBucket', 'nowInBucket', 'nowInBucket', 'keepGoing', 'keepGoing', 'keepGoing'.","ArrowFunctionExpression","unsafeRefs",["150"],["151"],["150"],["151"],["150"],["151"],"no-global-assign","no-unsafe-negation"]