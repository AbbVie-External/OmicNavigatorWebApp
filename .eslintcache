[{"C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Enrichment\\Enrichment.jsx":"1","C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\index.js":"2","C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Shared\\UrlControl.jsx":"3","C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Differential\\Differential.jsx":"4","C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Transitions\\TransitionActive.jsx":"5","C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Transitions\\TransitionStill.jsx":"6","C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Shared\\ButtonActions.jsx":"7","C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Shared\\helpers.jsx":"8","C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\services\\omicNavigator.service.js":"9","C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Differential\\DifferentialVolcano.jsx":"10","C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Differential\\DifferentialSearchCriteria.jsx":"11","C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Shared\\Templates.jsx":"12","C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Enrichment\\SplitPanesContainer.jsx":"13","C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\services\\pdf.service.js":"14","C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Shared\\SVGPlot.jsx":"15","C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Differential\\DifferentialPlot.jsx":"16","C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Transitions\\SearchingAlt.jsx":"17","C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Enrichment\\EnrichmentBreadcrumbs.jsx":"18","C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Enrichment\\FilteredDifferentialTable.jsx":"19","C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Differential\\DifferentialBreadcrumbs.jsx":"20","C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Enrichment\\EnrichmentResultsGraph.jsx":"21","C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Enrichment\\EnrichmentMultisetFilters.jsx":"22","C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Enrichment\\NetworkGraph.jsx":"23","C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Differential\\DifferentialVolcanoPlot.jsx":"24","C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Enrichment\\ViolinPlot.jsx":"25","C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\App.jsx":"26","C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Transitions\\LoaderActivePlots.jsx":"27","C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Tabs.jsx":"28","C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Differential\\DifferentialMultisetFilters.jsx":"29","C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Shared\\NumericExponentialInput.jsx":"30","C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Enrichment\\BarcodePlot.jsx":"31","C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Differential\\MetafeaturesTable.jsx":"32","C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Enrichment\\EnrichmentSearchCriteria.jsx":"33"},{"size":70297,"mtime":1608046486491,"results":"34","hashOfConfig":"35"},{"size":526,"mtime":1607720750130,"results":"36","hashOfConfig":"35"},{"size":9471,"mtime":1607720750009,"results":"37","hashOfConfig":"35"},{"size":29744,"mtime":1608072791169,"results":"38","hashOfConfig":"35"},{"size":956,"mtime":1607720750101,"results":"39","hashOfConfig":"35"},{"size":1065,"mtime":1607720750111,"results":"40","hashOfConfig":"35"},{"size":8317,"mtime":1608046486506,"results":"41","hashOfConfig":"35"},{"size":9343,"mtime":1607720750018,"results":"42","hashOfConfig":"35"},{"size":29059,"mtime":1608155125980,"results":"43","hashOfConfig":"35"},{"size":30348,"mtime":1607713160381,"results":"44","hashOfConfig":"35"},{"size":39876,"mtime":1608160687074,"results":"45","hashOfConfig":"35"},{"size":265,"mtime":1607720750004,"results":"46","hashOfConfig":"35"},{"size":8893,"mtime":1607720749920,"results":"47","hashOfConfig":"35"},{"size":1082,"mtime":1607720750328,"results":"48","hashOfConfig":"35"},{"size":5072,"mtime":1607720749978,"results":"49","hashOfConfig":"35"},{"size":5159,"mtime":1607720749777,"results":"50","hashOfConfig":"35"},{"size":430,"mtime":1607720750087,"results":"51","hashOfConfig":"35"},{"size":3918,"mtime":1607720749864,"results":"52","hashOfConfig":"35"},{"size":17309,"mtime":1607720749894,"results":"53","hashOfConfig":"35"},{"size":2406,"mtime":1607720749763,"results":"54","hashOfConfig":"35"},{"size":35312,"mtime":1608046486496,"results":"55","hashOfConfig":"35"},{"size":31074,"mtime":1607720749871,"results":"56","hashOfConfig":"35"},{"size":45132,"mtime":1607720749904,"results":"57","hashOfConfig":"35"},{"size":20659,"mtime":1607713150747,"results":"58","hashOfConfig":"35"},{"size":56925,"mtime":1607720749930,"results":"59","hashOfConfig":"35"},{"size":192,"mtime":1607720749746,"results":"60","hashOfConfig":"35"},{"size":714,"mtime":1607720750056,"results":"61","hashOfConfig":"35"},{"size":9949,"mtime":1608046547315,"results":"62","hashOfConfig":"35"},{"size":29414,"mtime":1607720749771,"results":"63","hashOfConfig":"35"},{"size":3897,"mtime":1607720749969,"results":"64","hashOfConfig":"35"},{"size":19996,"mtime":1607724625665,"results":"65","hashOfConfig":"35"},{"size":5229,"mtime":1607720749824,"results":"66","hashOfConfig":"35"},{"size":35350,"mtime":1608140269007,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"1asxuey",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"70"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Enrichment\\Enrichment.jsx",[],["139","140"],"C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\index.js",[],"C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Shared\\UrlControl.jsx",[],["141","142"],"C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Differential\\Differential.jsx",[],"C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Transitions\\TransitionActive.jsx",[],"C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Transitions\\TransitionStill.jsx",[],"C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Shared\\ButtonActions.jsx",[],"C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Shared\\helpers.jsx",["143"],"import React from 'react';\r\nimport { Popup } from 'semantic-ui-react';\r\nimport _ from 'lodash';\r\n// import phosphosite_icon from '../../resources/phosphosite.ico';\r\n// import reactome_icon from '../../resources/reactome.jpg';\r\n// import go_icon from '../../resources/go.png';\r\n// import msig_icon from '../../resources/msig.ico';\r\nimport * as d3 from 'd3-array';\r\n// import { omicNavigatorService } from '../../services/omicNavigator.service';\r\n\r\nexport function getLinkout(\r\n  // icons,\r\n  // iconDomains,\r\n  // TableValuePopupStyle,\r\n  // linkoutsConcatenated,\r\n  itemValue,\r\n  linkouts,\r\n  TableValuePopupStyle,\r\n) {\r\n  // itemValue = 'ENSP00000489236.1;ENSP00000484789.1;ENSP00000481486.1;ENSP00000480960.1;ENSP00000479794.1;ENSP00000479461.1';\r\n  function openWindows(link, itemValue) {\r\n    const windowFeatures =\r\n      'menubar=yes,location=yes,resizable=yes,scrollbars=yes,status=yes';\r\n    const itemValuesSeparated = separateItemValues(itemValue);\r\n    let linkoutsConcatenated = [];\r\n    if (itemValuesSeparated.length === 1) {\r\n      linkoutsConcatenated = `${link}${itemValuesSeparated[0]}`;\r\n      window.open(linkoutsConcatenated, '_blank', windowFeatures);\r\n    }\r\n    if (itemValuesSeparated.length > 1) {\r\n      for (const item of itemValuesSeparated) {\r\n        linkoutsConcatenated.push(`${link}${item}`);\r\n      }\r\n      linkoutsConcatenated.forEach(link => {\r\n        window.open(link, '_blank', windowFeatures);\r\n      });\r\n    }\r\n  }\r\n\r\n  const iconBaseUrl = 'https://icons.duckduckgo.com/ip3/';\r\n  let iconDomains = [];\r\n  let icons = [];\r\n\r\n  if (linkouts.length > 1) {\r\n    for (const val of linkouts) {\r\n      const domainRaw = findDomain(`${val}`);\r\n      const domainRawWww = domainRaw.includes('www')\r\n        ? domainRaw\r\n        : `www.${domainRaw}`;\r\n      const domainRawWwwHttps = domainRawWww.includes('//')\r\n        ? domainRawWww.split('//').pop()\r\n        : domainRawWww;\r\n      iconDomains.push(domainRawWwwHttps);\r\n      icons.push(`${iconBaseUrl}${domainRawWwwHttps}.ico`);\r\n    }\r\n\r\n    const Popups = linkouts.map((link, index) => {\r\n      return (\r\n        <Popup\r\n          key={itemValue - index}\r\n          trigger={\r\n            <img\r\n              src={icons[index]}\r\n              alt={iconDomains[index]}\r\n              className=\"ExternalSiteIcon\"\r\n              onClick={() => openWindows(link, itemValue)}\r\n            />\r\n          }\r\n          style={TableValuePopupStyle}\r\n          className=\"TablePopupValue\"\r\n          content={iconDomains[index]}\r\n          inverted\r\n          basic\r\n        />\r\n      );\r\n    });\r\n    return Popups;\r\n  } else {\r\n    const linkoutsIsArray = Array.isArray(linkouts);\r\n    const domainRaw = linkoutsIsArray\r\n      ? findDomain(`${linkouts[0]}`)\r\n      : findDomain(linkouts);\r\n    const domainRawWww = domainRaw.includes('www')\r\n      ? domainRaw\r\n      : `www.${domainRaw}`;\r\n    const domainRawWwwHttps = domainRawWww.includes('//')\r\n      ? domainRawWww.split('//').pop()\r\n      : domainRawWww;\r\n    iconDomains.push(domainRawWwwHttps);\r\n    icons.push(`${iconBaseUrl}${domainRawWwwHttps}.ico`);\r\n    return (\r\n      <Popup\r\n        key={itemValue}\r\n        trigger={\r\n          <img\r\n            src={icons[0]}\r\n            alt={iconDomains}\r\n            className=\"ExternalSiteIcon\"\r\n            onClick={() => openWindows(linkouts, itemValue)}\r\n          />\r\n        }\r\n        style={TableValuePopupStyle}\r\n        className=\"TablePopupValue\"\r\n        content={iconDomains}\r\n        inverted\r\n        basic\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport function separateItemValues(value) {\r\n  if (value) {\r\n    const splitValuesArr = value.split(';');\r\n    // const arrayOfValues =\r\n    return splitValuesArr;\r\n  }\r\n}\r\n\r\nexport function formatNumberForDisplay(num) {\r\n  if (!isNaN(num)) {\r\n    const number = Math.abs(num);\r\n    if (number === 0) {\r\n      return num;\r\n    } else if (number < 0.001 || number >= 1000) {\r\n      return num.toExponential(2);\r\n      // * If a number is < .001 report this value scientific notation with three significant digits\r\n      // * If a number is >= 1000, switch to scientific notation with three sig digits.\r\n\r\n      // } else if (number < 1 && number >= 0.001) {\r\n      //   return num.toPrecision(3);\r\n      // * If a number is < 1 & >= .001, report this value with three decimal places\r\n      // PN - what's left is >=1 and <1000, guess that goes to 3 digits too\r\n    } else {\r\n      return num.toPrecision(3);\r\n    }\r\n  } else return null;\r\n}\r\n\r\nexport function splitValue(value) {\r\n  if (value) {\r\n    const firstValue = value.split(';')[0];\r\n    const numberOfSemicolons = (value.match(/;/g) || []).length;\r\n    return numberOfSemicolons > 0\r\n      ? `${firstValue}...(${numberOfSemicolons})`\r\n      : firstValue;\r\n  }\r\n}\r\n\r\nexport function findDomain(link) {\r\n  if (link) {\r\n    const path = link.split('//')[1] || null;\r\n    return path != null ? path.split('/')[0] : null;\r\n  }\r\n}\r\n\r\nexport function limitValues(values, size) {\r\n  if (values) {\r\n    let commaSeparatedValues = values.join(', ');\r\n    if (values.length <= size) {\r\n      return commaSeparatedValues;\r\n    } else {\r\n      const numberOfCommas = (commaSeparatedValues.match(/,/g) || []).length;\r\n      const splitValues = commaSeparatedValues.split(',');\r\n      const slicedValues = splitValues.slice(0, size);\r\n      return `${slicedValues}...(${numberOfCommas + 1 - size} more)`;\r\n    }\r\n  }\r\n}\r\n\r\nexport function limitString(string, indexes, characters) {\r\n  if (indexes < 3) {\r\n    return string;\r\n  } else {\r\n    let stringSubstring = string?.substring(0, characters);\r\n    return `${stringSubstring}...`;\r\n  }\r\n}\r\n\r\nexport function scrollElement(_this, grid, target) {\r\n  const bodyRef =\r\n    _this[grid].current?.qhGridRef?.current?.bodyRef?.current || null;\r\n  window.requestAnimationFrame(function() {\r\n    if (bodyRef != null) {\r\n      const row = bodyRef.getElementsByClassName(target);\r\n      if (row.length !== 0) {\r\n        bodyRef.scrollTo({\r\n          top: row[0].offsetTop - 40,\r\n          left: 0,\r\n          behavior: 'smooth',\r\n        });\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nexport function networkByCluster(network) {\r\n  network = _.cloneDeep(network);\r\n  let buckets = [];\r\n  let inBucket = false;\r\n  const bucket = () => {\r\n    let keepGoing = true;\r\n    let nodeArray = [];\r\n    let nowInBucket = false;\r\n\r\n    while (keepGoing) {\r\n      keepGoing = false;\r\n      _.forEach(network.links, link => {\r\n        nowInBucket = false;\r\n        _.forEach(buckets, bucket => {\r\n          if (\r\n            _.includes(bucket, link.source) ||\r\n            _.includes(bucket, link.target)\r\n          ) {\r\n            nowInBucket = true;\r\n          }\r\n        });\r\n        if (!nowInBucket) {\r\n          if (\r\n            !_.includes(nodeArray, link.source) &&\r\n            !_.includes(nodeArray, link.target) &&\r\n            nodeArray.length === 0\r\n          ) {\r\n            nodeArray.push(link.source);\r\n            nodeArray.push(link.target);\r\n            keepGoing = true;\r\n          }\r\n          if (\r\n            _.includes(nodeArray, link.source) &&\r\n            !_.includes(nodeArray, link.target)\r\n          ) {\r\n            nodeArray.push(link.target);\r\n            keepGoing = true;\r\n          }\r\n          if (\r\n            _.includes(nodeArray, link.target) &&\r\n            !_.includes(nodeArray, link.source)\r\n          ) {\r\n            nodeArray.push(link.source);\r\n            keepGoing = true;\r\n          }\r\n        }\r\n      });\r\n    }\r\n    return nodeArray;\r\n  };\r\n  _.forEach(network.links, link => {\r\n    inBucket = false;\r\n    _.forEach(buckets, bucket => {\r\n      if (_.includes(bucket, link.source) || _.includes(bucket, link.target)) {\r\n        inBucket = true;\r\n      }\r\n    });\r\n    //found a link that isn't accounted for, so run through the bucketing process\r\n    if (!inBucket) {\r\n      buckets.push(bucket());\r\n    }\r\n  });\r\n  let nextIndex = 1;\r\n  _.forEach(network.nodes, node => {\r\n    let found = false;\r\n    _.forEach(buckets, (bucket, i) => {\r\n      if (_.includes(bucket, node.id)) {\r\n        node.group = i;\r\n        found = true;\r\n      }\r\n    });\r\n    if (!found) {\r\n      node.group = buckets.length + nextIndex;\r\n      nextIndex++;\r\n    }\r\n  });\r\n  _.forEach(network.links, link => {\r\n    _.forEach(buckets, (bucket, i) => {\r\n      if (_.includes(bucket, link.target || _.includes(bucket, link.source))) {\r\n        link.group = i;\r\n      }\r\n    });\r\n  });\r\n  network.nodes = _.sortBy(network.nodes, [\r\n    function(o) {\r\n      return o.group;\r\n    },\r\n  ]);\r\n  network.links = _.sortBy(network.links, [\r\n    function(o) {\r\n      return o.group;\r\n    },\r\n  ]);\r\n  let nodes = d3.group(network.nodes, d => d.group);\r\n  let links = d3.group(network.links, d => d.group);\r\n  let nodeArray = Array.from(nodes, function(o) {\r\n    return { name: 'cluster' + o[0], size: o[1].length, nodes: o[1] };\r\n  });\r\n  let linkArray = Array.from(links, function(o) {\r\n    return { name: 'cluster' + o[0], size_links: o[1].length, links: o[1] };\r\n  });\r\n  _.forEach(nodeArray, nObj => {\r\n    let links = _.find(linkArray, function(lObj) {\r\n      return lObj.name === nObj.name;\r\n    });\r\n    if (links) {\r\n      nObj.links = links.links;\r\n    } else {\r\n      nObj.links = [];\r\n    }\r\n  });\r\n  nodeArray.sort((x, y) => d3.descending(x.size, y.size));\r\n  return { name: 'Network', children: nodeArray };\r\n}\r\n","C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\services\\omicNavigator.service.js",[],"C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Differential\\DifferentialVolcano.jsx",[],"C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Differential\\DifferentialSearchCriteria.jsx",[],"C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Shared\\Templates.jsx",[],"C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Enrichment\\SplitPanesContainer.jsx",[],"C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\services\\pdf.service.js",[],"C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Shared\\SVGPlot.jsx",[],["144","145"],"C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Differential\\DifferentialPlot.jsx",[],"C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Transitions\\SearchingAlt.jsx",[],"C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Enrichment\\EnrichmentBreadcrumbs.jsx",[],"C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Enrichment\\FilteredDifferentialTable.jsx",[],"C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Differential\\DifferentialBreadcrumbs.jsx",[],"C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Enrichment\\EnrichmentResultsGraph.jsx",[],"C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Enrichment\\EnrichmentMultisetFilters.jsx",[],"C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Enrichment\\NetworkGraph.jsx",[],"C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Differential\\DifferentialVolcanoPlot.jsx",[],"C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Enrichment\\ViolinPlot.jsx",[],"C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\App.jsx",[],["146","147"],"C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Transitions\\LoaderActivePlots.jsx",[],"C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Tabs.jsx",[],"C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Differential\\DifferentialMultisetFilters.jsx",[],"C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Shared\\NumericExponentialInput.jsx",[],"C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Enrichment\\BarcodePlot.jsx",[],"C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Differential\\MetafeaturesTable.jsx",[],"C:\\Dev\\OmicNavigator\\OmicNavigator\\src\\components\\Enrichment\\EnrichmentSearchCriteria.jsx",[],{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","replacedBy":"151"},{"ruleId":"148","replacedBy":"152"},{"ruleId":"150","replacedBy":"153"},{"ruleId":"154","severity":1,"message":"155","line":208,"column":32,"nodeType":"156","messageId":"157","endLine":243,"endColumn":8},{"ruleId":"148","replacedBy":"158"},{"ruleId":"150","replacedBy":"159"},{"ruleId":"148","replacedBy":"160"},{"ruleId":"150","replacedBy":"161"},"no-native-reassign",["162"],"no-negated-in-lhs",["163"],["162"],["163"],"no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'nowInBucket', 'nowInBucket', 'nowInBucket', 'keepGoing', 'keepGoing', 'keepGoing'.","ArrowFunctionExpression","unsafeRefs",["162"],["163"],["162"],["163"],"no-global-assign","no-unsafe-negation"]